// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranAnhDung.API.DataAccess.Context;

#nullable disable

namespace TranAnhDung.API.DataAccess.Migrations
{
    [DbContext(typeof(EFDataContext))]
    [Migration("20240901133044_CreateExercise03DB")]
    partial class CreateExercise03DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Example07.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TranAnhDung.API.DataAccess.Entity.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CategoryId"));

                    b.Property<long?>("AddedBy")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<short>("IsParent")
                        .HasColumnType("SMALLINT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Summary")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("CategoryId");

                    b.HasIndex("AddedBy");

                    b.HasIndex("ParentId");

                    b.ToTable("Category", "dbo");
                });

            modelBuilder.Entity("TranAnhDung.API.DataAccess.Entity.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"));

                    b.Property<long?>("BrandId")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("CatId")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("ChildCatId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<short>("IsFeatured")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Stock")
                        .HasColumnType("INT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("ProductId");

                    b.HasIndex("CatId");

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("TranAnhDung.API.DataAccess.Entity.Category", b =>
                {
                    b.HasOne("Example07.Models.User", "AddedByNavigation")
                        .WithMany()
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TranAnhDung.API.DataAccess.Entity.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AddedByNavigation");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("TranAnhDung.API.DataAccess.Entity.Product", b =>
                {
                    b.HasOne("TranAnhDung.API.DataAccess.Entity.Category", "Cat")
                        .WithMany("Products")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("TranAnhDung.API.DataAccess.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
